{"version":3,"sources":["components/common/FormControls/FormControls.module.css","Redux/dialogs-reducer.js","Redux/users-reducer.js","api/api.js","assets/images/preloader.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","Redux/app-reducer.js","Redux/redux-store.js","App.js","index.js","components/common/Preloader/Preloader.js","components/Login/Login.module.css","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/Profile/MyPosts/MyPosts.module.css","assets/images/user.svg"],"names":["module","exports","initialState","dialogs","id","name","messages","message","newMessageText","sendNewMessageActionCreator","type","dialogsReducer","state","action","body","FOLLOW","users","pageSize","totalUsersCount","currentPage","isFetching","isFollowing","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","requestUsers","requestedPage","dispatch","a","usersAPI","getUsers","data","items","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followUser","bind","unfollow","unfollowUser","usersReducer","map","user","followed","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","authAPI","getAuth","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","nav__link","to","activeClassName","activeLink","ProfileStatusHooks","props","useState","editMode","setEditMode","setStatus","useEffect","statusBlock","onChange","event","currentTarget","value","autoFocus","onBlur","isOwner","updateUserStatus","onKeyPress","key","onDoubleClick","no_current_status","ProfileInfo","profile","Preloader","profileBlock","avatarBlock","src","photos","large","userPhoto","alt","avatar_img","loaging_fogging","htmlFor","changeAvatar__container","onInput","target","files","length","style","display","informationBlock","nameBlock","fullName","ADD_POST","posts","likesCount","newPostText","profileIsFetching","profileReducer","newPost","postId","Post","post__header","small","post__date","post__content","post__activity","activities","maxLength100","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","postsBlock__row","Field","component","Textarea","placeholder","validate","postsBlock__addButton","MyPosts","postElements","p","postsBlock","addPost","MyPostsContainer","connect","profilePage","addPostActionCreator","reset","Profile","myUserId","ProfileContainer","this","params","history","push","getUserProfile","getUserStatus","refreshProfile","document","title","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","photo","withRouter","Header","header","header__container","header__row","header__logo","logo_name","header__nameBlock","header__afterAuthBlock","header__loginBlock","onClick","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","error","styles","loginForm__block","Input","required","formErorr","RememberMe","stopSubmit","_error","loginContent","login__header","initialized","appReducer","reducers","combineReducers","dialogsPage","usersPage","formReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","Music","NotFound","App","initializeApp","fallback","exact","from","path","render","AppContainer","promise","Promise","all","WhooshApp","basename","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","position","left","top","input","meta","touched","hasError","formControl_dContents","error_message","formControl","error_icon","checkboxBlock","checkboxBlock__left","checkboxBlock__label","checkbox","checkboxBlock__right","submitButton","maxLength"],"mappings":"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","file":"static/js/main.e20fcb80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__12TY2\",\"formControl_dContents\":\"FormControls_formControl_dContents__2Y_3b\",\"error\":\"FormControls_error__3PEaW\",\"error_message\":\"FormControls_error_message__SBxiB\",\"error_icon\":\"FormControls_error_icon__c8NFY\",\"Input\":\"FormControls_Input__3SinC\",\"checkboxBlock\":\"FormControls_checkboxBlock__tchY-\",\"checkbox\":\"FormControls_checkbox__2f0eT\",\"checkboxBlock__label\":\"FormControls_checkboxBlock__label__Ym39K\",\"checkboxBlock__left\":\"FormControls_checkboxBlock__left__1iWMu\",\"checkboxBlock__right\":\"FormControls_checkboxBlock__right__3yxTw\",\"submitButton\":\"FormControls_submitButton__1c_l5\"};","const SEND_NEW_MESSAGE = \"dialogs/SEND-NEW-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Степан'},\r\n        {id: 2, name: 'Mashtapok'},\r\n        {id: 3, name: 'Поросёнок Пётр'},\r\n        {id: 4, name: 'Борис'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Привет!'},\r\n        {id: 2, message: 'Как твои дела?'},\r\n    ],\r\n    newMessageText: '',\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_NEW_MESSAGE:\r\n            if (!action.newMessageText) return state;\r\n            let body = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body} ],   // добавляем в конец массива вместо push()\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendNewMessageActionCreator = (newMessageText) => ({type: SEND_NEW_MESSAGE, newMessageText });\r\n\r\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'users/TOGGLE_IS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users] или строчка снизу v\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT : {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING : {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING : {\r\n            return {\r\n                ...state, isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowing = (isFollowing, userId) => ({type: TOGGLE_IS_FOLLOWING, isFollowing, userId});\r\n\r\n// ThunkCreators\r\nexport const requestUsers = (requestedPage, pageSize) => async dispatch => {\r\n    dispatch(setCurrentPage(requestedPage));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await usersAPI.getUsers(requestedPage, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowing(true, userId));\r\n\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async dispatch => {\r\n    let apiMethod = usersAPI.followUser.bind(usersAPI);\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n};\r\nexport const unfollow = (userId) => async dispatch => {\r\n    let apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n    followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;\r\n\r\n\r\n/*\r\nexport const follow = (userId) => async dispatch => {\r\n    dispatch(toggleIsFollowing(true, userId));\r\n\r\n    const data = await usersAPI.followUser(userId);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(followSuccess(userId))\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId));\r\n};*/\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"03264173-eec8-4502-908e-4f5cb750fde1\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updatePhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append('file', photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.e5007e6d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__image\":\"ProfileInfo_content__image__2itkw\",\"profileBlock\":\"ProfileInfo_profileBlock__1Tl-n\",\"avatarBlock\":\"ProfileInfo_avatarBlock__1yytu\",\"avatar_img\":\"ProfileInfo_avatar_img__26JxK\",\"informationBlock\":\"ProfileInfo_informationBlock__RozSX\",\"nameBlock\":\"ProfileInfo_nameBlock__2E1u-\",\"statusBlock\":\"ProfileInfo_statusBlock__-ya0P\",\"status\":\"ProfileInfo_status__3hJhj\",\"no_current_status\":\"ProfileInfo_no_current_status__1vdhU\",\"changeAvatar__container\":\"ProfileInfo_changeAvatar__container__1gz-k\",\"loaging_fogging\":\"ProfileInfo_loaging_fogging__YhFiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3AP48\",\"nav__link\":\"Navbar_nav__link__1rwRK\",\"activeLink\":\"Navbar_activeLink__1rOZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1_Bw2\",\"post__header\":\"Post_post__header__3WixS\",\"post__date\":\"Post_post__date__1R9Ui\",\"post__content\":\"Post_post__content__Kgp3a\",\"post__activity\":\"Post_post__activity__3h7DM\",\"activities\":\"Post_activities__rWT-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__31Spg\",\"header__container\":\"Header_header__container__1X4Xa\",\"header__row\":\"Header_header__row__Sb-1l\",\"header__logo\":\"Header_header__logo__1tg88\",\"logo_name\":\"Header_logo_name__2pKRy\",\"header__loginBlock\":\"Header_header__loginBlock__Bg-F8\",\"header__nameBlock\":\"Header_header__nameBlock__1fuQz\",\"header__afterAuthBlock\":\"Header_header__afterAuthBlock__FAqkY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className=\"container\">\r\n                <div className=\"nav__column\">\r\n                    <div className=\"nav__list\">\r\n                        <div className={s.nav__link}>\r\n                            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Профиль</NavLink>\r\n                        </div>\r\n                        <div className={s.nav__link}>\r\n                            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Сообщения</NavLink>\r\n                        </div>\r\n                        <div className={s.nav__link}>\r\n                            <NavLink to=\"/users\" activeClassName={s.activeLink}>Пользователи</NavLink>\r\n                        </div>\r\n                        <div className={s.nav__link}>\r\n                            <NavLink to=\"/music\" activeClassName={s.activeLink}>Музыка</NavLink>\r\n                        </div>\r\n                        <div className={s.nav__link}>\r\n                            <NavLink to=\"/news\" activeClassName={s.activeLink}>Новости</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    let [ editMode, setEditMode ] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if(props.isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    };\r\n    const deactivateEditMode = () => {\r\n        if(props.isOwner) {\r\n            setEditMode(false);\r\n            props.updateUserStatus(status);\r\n        }\r\n    };\r\n    const enterDeactivateEditMode = (event) => {\r\n        if(props.isOwner) {\r\n            if (event.key === \"Enter\") {\r\n                setEditMode(false);\r\n                props.updateUserStatus(status);\r\n            }\r\n        }\r\n    };\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value)\r\n    };\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            <div>\r\n                {editMode\r\n                    ? <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                             onKeyPress={enterDeactivateEditMode}\r\n                             type=\"text\" value={status}/>\r\n                    : <p onDoubleClick={activateEditMode}\r\n                         className={s.status}>{props.status ||\r\n                    <span className={s.no_current_status}>{props.isOwner ? \"изменить статус\" : \"нет статуса\"}</span>}</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusHooks;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.svg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = ({profile, isFetching, status, updateUserStatus, isOwner, updatePhoto}) => {\r\n    const onAvatarSelected = (event) => {\r\n        if (event.target.files.length) {\r\n            updatePhoto(event.target.files[0]);\r\n        }\r\n    };\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    if (isFetching) {\r\n        return <Preloader/>\r\n    }\r\n    else return (\r\n        <>\r\n            <div className={s.profileBlock}>\r\n                <div className={s.avatarBlock}>\r\n                    <img src={profile.photos.large || userPhoto }\r\n                         alt=\"фото пользователя\" className={s.avatar_img}/>\r\n                         <div className={s.loaging_fogging}>Загрузка...</div>\r\n\r\n                    {isOwner && <label htmlFor=\"avatar\" className={s.changeAvatar__container}>\r\n                        <div>\r\n                            <i className=\"fas fa-cloud-upload-alt\"/>\r\n                            <input onInput={onAvatarSelected} type=\"file\" id=\"avatar\" style={{display: \"none\"}} />\r\n                        </div>\r\n                    </label>}\r\n\r\n                </div>\r\n                \r\n                \r\n                <div className={s.informationBlock}>\r\n                    <div className={s.nameBlock}>{profile.fullName}</div>\r\n                    <ProfileStatusHooks isOwner={isOwner} status={status} updateUserStatus={updateUserStatus }/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\n/*\r\n{props.isFetching ? <Preloader/> :\r\n    <div className={s.profileBlock}>\r\n        <div className={s.avatarBlock}>\r\n            {props.profile.photos.large\r\n                ? <img src={props.profile.photos.large} alt=\"avatar\" className={s.avatar_img}/>\r\n                : <img src={userPhoto} alt=\"avatar\" className={s.avatar_img}/>}\r\n        </div>\r\n        <div className={s.informationBlock}>\r\n            <div className={s.nameBlock}>{props.profile.fullName}</div>\r\n            <div>\r\n                <div>Статус: {props.profile.aboutMe}</div>\r\n                <div>Город</div>\r\n                <div>Ссылки</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}*/\r\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst PROFILE_IS_FETCHING = 'profile/PROFILE_IS_FETCHING';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nconst UPDATE_PHOTO_SUCCESS = 'profile/UPDATE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, Whoosh!', likesCount: 100},\r\n        {id: 2, message: 'Это твой первый пост', likesCount: 1},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    isFetching: false,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            if (!action.newPostText) return state;\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case PROFILE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)}\r\n        }\r\n        case UPDATE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// ActionCreators\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const profileIsFetching = (isFetching) => ({type: PROFILE_IS_FETCHING, isFetching});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const updatePhotoSuccess = (photos) => ({type: UPDATE_PHOTO_SUCCESS, photos});\r\n\r\n// ThunkCreators\r\nexport const getUserProfile = (userId) => async dispatch => {\r\n    dispatch(profileIsFetching(true));\r\n\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(profileIsFetching(false));\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async dispatch => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\nexport const updateUserStatus = (status) => async dispatch => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const updatePhoto = (photo) => async dispatch => {\r\n    const data = await profileAPI.updatePhoto(photo);\r\n    if (data.resultCode === 0) {\r\n        dispatch(updatePhotoSuccess(data.data.photos));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.svg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post__header}>\r\n                <img src={props.profile.photos.small === null ? userPhoto : props.profile.photos.small} alt=\"avatar\"/>\r\n                <div>\r\n                    <h2>{props.profile.fullName}</h2>\r\n                    <div className={s.post__date}>15:30:12</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.post__content}>\r\n                <span>{props.message}</span>\r\n            </div>\r\n            <div className={s.post__activity}>\r\n                <div className={s.activities}>\r\n                    <i className=\"far fa-heart\"/> {props.likesCount}\r\n                </div>\r\n                &nbsp;\r\n                <div className={s.activities}>\r\n                    <i className=\"far fa-comment\"/> 0\r\n                </div>\r\n                &nbsp;\r\n                <div className={s.activities}>\r\n                    <i className=\"fas fa-share\"/> 0\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm } from \"redux-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map ( p => (<Post message={p.message} likesCount={p.likesCount}\r\n                                                     profile={props.profile}/>) );\r\n\r\n    const addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>Все записи</h2>\r\n            <AddNewPostReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postElements}\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={s.postsBlock__row}>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder=\"Что у вас нового?\" validate={[maxLength100]}/>\r\n            <button className={s.postsBlock__addButton}>Добавить</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({form:\"addNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n            dispatch(reset(\"addNewPostForm\"));\r\n        },\r\n    }\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if(props.isFetching || props.profile === null) {\r\n        return(<Preloader/>)\r\n    }\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container\">\r\n                <ProfileInfo isOwner={props.isOwner} profile={props.profile} isFetching={props.isFetching} status={props.status}\r\n                             updateUserStatus={props.updateUserStatus } updatePhoto={props.updatePhoto} />\r\n                {props.profile.userId === props.myUserId && <MyPostsContainer />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    profileIsFetching,\r\n    updatePhoto,\r\n    updateUserStatus\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.myUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n        document.title = \"Профиль\";\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     isFetching={this.props.isFetching}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     updatePhoto={this.props.updatePhoto} />\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    status: state.profilePage.status,\r\n    myUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {profileIsFetching, getUserProfile, getUserStatus, updateUserStatus, updatePhoto}),\r\n    withRouter,\r\n    // withAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header__container}>\r\n                <div className={s.header__row}>\r\n                    <div className={s.header__logo}>\r\n                        <img src=\"https://tlgrm.ru/img/top-logo-icon_monochrome.svg\" alt=\"\"/>\r\n                        <span className={s.logo_name}>Whoosh</span>\r\n                    </div>\r\n                    <NavLink to={`/profile`}>\r\n                        <div className={s.header__nameBlock}>\r\n                            {props.isAuth ? <div className={s.header__afterAuthBlock}>{props.login}</div> : null}\r\n                        </div>\r\n                    </NavLink>\r\n                    <NavLink to=\"/login\">\r\n                        <div className={s.header__loginBlock}>\r\n                            {props.isAuth ? <div onClick={props.logout}>Выйти</div> : <div>Войти</div>}\r\n                        </div>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ActionCreators\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\n// ThunkCreators\r\nexport const getAuthUserData = () => async dispatch => {\r\n    const data = await authAPI.getAuth();\r\n\r\n    if (data.resultCode === 0) {\r\n        const {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async dispatch => {\r\n    const data = await authAPI.login(email, password, rememberMe);\r\n            if (data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = `(${data.messages[0]})`;\r\n                dispatch(stopSubmit(\"login\", {_error: `Не удалось войти в систему ${message}`}))\r\n            }\r\n};\r\nexport const logout = () => async dispatch => {\r\n    const data = await authAPI.logout();\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React, {useEffect} from \"react\";\r\nimport \"../../App.css\"\r\nimport styles from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {RememberMe, Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div className={styles.loginForm__block}>\r\n                <label>Введите email\r\n                    <Field placeholder=\"example@gmail.com\" name=\"email\" component={Input} validate={[required]} type=\"email\"/>\r\n                </label>\r\n            </div>\r\n            <div className={styles.loginForm__block}>\r\n                <label>Введите пароль\r\n                    <Field placeholder=\"Пароль\" name=\"password\" component={Input} validate={[required]} type=\"password\" />\r\n                </label>\r\n            </div>\r\n            {error && <div className={styles.formErorr}>\r\n                {error}\r\n            </div>}\r\n            <div className={styles.loginForm__block} >\r\n                <Field component={RememberMe} name=\"rememberMe\" type=\"checkbox\" />\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    useEffect(() => {document.title = \"Войти | Whoosh\"},[]);\r\n\r\n    const onSubmit = (formData => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    });\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div className={styles.loginContent + \" content\"}>\r\n            <div className=\"container\">\r\n                <div className={styles.login__header}>Войдите в свой аккаунт</div>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ActionCreators\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n// ThunkCreators\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n};\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReducer from \"./profile-reducer.js\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,                // store автоматически создаёт внутри себя state: с profilePage, dialogsPage, sidebar\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst NotFound = React.lazy(() => import('./components/common/NotFound/NotFound'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <Suspense fallback={<Preloader/>}>\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/news' component={NotFound}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/login' render={() => <LoginPage/>}/>\n                        <Route render={() => <NotFound/>}/>\n                    </Switch>\n                </Suspense>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst WhooshApp = (props) => {\n    return <HashRouter basename=\"/\">\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default WhooshApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WhooshApp from \"./App\";\n\nReactDOM.render(<WhooshApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img src={preloader} style={ {position: \"absolute\", left: \"45%\", top: \"10%\" }}/>\r\n    );\r\n};\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContent\":\"Login_loginContent__2w7O5\",\"login__header\":\"Login_login__header__30HIh\",\"loginForm__block\":\"Login_loginForm__block__1ms65\",\"formErorr\":\"Login_formErorr__12U9m\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            {children}\r\n            {hasError && <i className={styles.error_icon + \" fas fa-exclamation-circle\"}></i>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl_dContents + \" \" + (hasError ? styles.error : \"\")}>\r\n            <textarea {...input} {...props} />\r\n            {hasError && <span className={styles.error_message}>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <input {...input} {...props} className={styles.Input}/>\r\n            {hasError && <i className={styles.error_icon + \" fas fa-exclamation-circle\"}></i>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RememberMe = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.checkboxBlock + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div className={styles.checkboxBlock__left}>\r\n                <label className={styles.checkboxBlock__label}>\r\n                    <input type=\"checkbox\" {...input} {...props} className={styles.checkbox}/>\r\n                    запомнить меня</label>\r\n            </div>\r\n            <div className={styles.checkboxBlock__right}>\r\n                <button className={styles.submitButton}>Войти</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","export const required = value => {\r\n    if(value) return undefined\r\n    return \"Поле обязательное\"\r\n};\r\n\r\n// функция возвращает другую функцию\r\nexport const maxLengthCreator = (maxLength) =>\r\n    (value) => {\r\n        if(value && value.length > maxLength) return `Максимальная длина ${maxLength} символов`;\r\n        return undefined\r\n    };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1o35Z\",\"postsBlock__row\":\"MyPosts_postsBlock__row__29Zwj\",\"postsBlock__addButton\":\"MyPosts_postsBlock__addButton__1QjAP\",\"posts\":\"MyPosts_posts__3k9O3\"};","module.exports = __webpack_public_path__ + \"static/media/user.d3569aa1.svg\";"],"sourceRoot":""}