{"version":3,"sources":["components/Navbar/Navbar.module.css","components/common/FormControls/FormControls.module.css","api/api.js","Redux/dialogs/dialogs-reducer.js","Redux/users/users-reducer.js","Redux/news/news-reducer.js","assets/images/header-logo.svg","components/common/FormControls/FormControls.jsx","components/Login/Login.module.css","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/common/Gallery/Gallery.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/authorization/auth-reducer.js","Redux/profile/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","Redux/app-reducer.js","Redux/redux-store.js","components/common/Preloader/InitializePreloader.js","App.js","index.js","components/Header/Header.module.css","utils/validators/validators.js","components/common/Preloader/Preloader.js","components/common/Gallery/Gallery.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user.svg","assets/images/preloader.svg","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userId","post","unfollowUser","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","updateProfile","profile","authAPI","getAuth","login","email","password","rememberMe","captcha","logout","config","newsAPI","getNews","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","newMessageText","sendNewMessageActionCreator","type","dialogsReducer","state","action","body","FOLLOW","users","totalUsersCount","isFetching","isFollowing","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","requestUsers","requestedPage","dispatch","a","items","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","map","user","followed","filter","articles","requestArticles","alert","newsReducer","Textarea","input","meta","touched","error","props","hasError","className","styles","formControl_dContents","error_message","Input","formControl","error_icon","RememberMe","checkboxBlock","checkboxBlock__left","checkboxBlock__label","checkbox","checkboxBlock__right","submitButton","Checkbox","Boolean","window","location","hostname","match","AdaptiveNavbar","s","adaptive__container","adaptive__block","to","activeClassName","adaptive_activeLink","Navbar","nav","nav__link","activeLink","ProfileStatusHooks","useState","editMode","setEditMode","setStatus","useEffect","statusBlock","onChange","event","currentTarget","value","autoFocus","onBlur","isOwner","updateUserStatus","onKeyPress","key","onDoubleClick","no_current_status","ProfileDataReduxForm","reduxForm","form","handleSubmit","showMore","setShowMore","otherInformation","onSubmit","formErorr","label","Field","placeholder","component","aboutMe","job","style","display","alignItems","fontSize","position","top","showMore__block","onClick","editContacts","Object","keys","contacts","saveButton","btn_save","Gallery","galleryStyle","wrapper","contentWrapper","content","header","setShowGallery","htmlFor","onInput","uploadPhoto","src","img","alt","ProfileData","activateEditMode","hasContact","lookingForAJob","lookingForAJobDescription","contancts","contacts__row","index","contactTitle","contactValue","Contact","nameClass","icon__block","target","href","icon","rel","ProfileInfo","isAvatarUpdating","showGallery","Preloader","profileBlock","avatarBlock","photos","large","userPhoto","avatar_img","small","loaging_fogging","changeAvatar__container","files","length","informationBlock","nameBlock","fullName","initialValues","deActivateEditMode","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","ADD_POST","posts","likesCount","newPostText","profileIsFetching","avatarIsUpdating","getUserProfile","profileReducer","newPost","postId","Post","post__header","post__date","post__content","post__activity","activities","maxLength100","maxLengthCreator","AddNewPostReduxForm","postsBlock__row","validate","postsBlock__addButton","MyPosts","postElements","postsBlock","addPost","MyPostsContainer","connect","profilePage","addPostActionCreator","reset","Profile","document","title","myUserId","ProfileContainer","this","params","history","push","getUserStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","photo","getState","OwnerUserId","stopSubmit","_error","Promise","reject","withRouter","Header","header__container","header__row","header__logo","logo","logo_name","header__nameBlock","header__afterAuthBlock","header__loginBlock","HeaderContainer","maxLength30","maxLength10","LoginReduxForm","loginForm__block","required","captchaImage","loginContent","login__header","initialized","appReducer","reducers","combineReducers","dialogsPage","usersPage","formReducer","app","news","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","InitialiePreloader","preloader","margin","DialogsContainer","lazy","UsersContainer","NewsContainer","NotFound","App","initializeApp","fallback","exact","from","path","render","AppContainer","promise","all","WhooshApp","basename","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","maxLength","undefined","left"],"mappings":"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","file":"static/js/main.2fc611de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3AP48\",\"nav__link\":\"Navbar_nav__link__1rwRK\",\"activeLink\":\"Navbar_activeLink__1rOZb\",\"adaptive__container\":\"Navbar_adaptive__container__4mHfV\",\"adaptive__block\":\"Navbar_adaptive__block__iIGRh\",\"adaptive_activeLink\":\"Navbar_adaptive_activeLink__153mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__12TY2\",\"formControl_dContents\":\"FormControls_formControl_dContents__2Y_3b\",\"error\":\"FormControls_error__3PEaW\",\"error_message\":\"FormControls_error_message__SBxiB\",\"error_icon\":\"FormControls_error_icon__c8NFY\",\"Input\":\"FormControls_Input__3SinC\",\"checkboxBlock\":\"FormControls_checkboxBlock__tchY-\",\"checkbox\":\"FormControls_checkbox__2f0eT\",\"checkboxBlock__label\":\"FormControls_checkboxBlock__label__Ym39K\",\"checkboxBlock__left\":\"FormControls_checkboxBlock__left__1iWMu\",\"checkboxBlock__right\":\"FormControls_checkboxBlock__right__3yxTw\",\"submitButton\":\"FormControls_submitButton__1c_l5\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"03264173-eec8-4502-908e-4f5cb750fde1\"\r\n    }\r\n});\r\n\r\nconst newsURL = \"https://newsapi.org/v2/top-headlines?country=ru&apiKey=5ed99f894ed747178013e1bff5814a24\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updatePhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append('file', photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateProfile(profile) {\r\n        return instance.put(`profile`, profile).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\nlet config = {'X-Api-Key': '5ed99f894ed747178013e1bff5814a24'};\r\n\r\nexport const newsAPI = {\r\n    getNews() {\r\n        return axios.get(newsURL, {headers  : config}).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n      return instance.get(`security/get-captcha-url`).then(response => {\r\n          return response.data\r\n      })\r\n  }\r\n};\r\n\r\n\r\n","const SEND_NEW_MESSAGE = \"dialogs/SEND-NEW-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Степан'},\r\n        {id: 2, name: 'Mashtapok'},\r\n        {id: 3, name: 'Пётр'},\r\n        {id: 4, name: 'Борис'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Привет! Как твои дела?'},\r\n        {id: 2, message: 'Всё понятно...'},\r\n        {id: 3, message: 'ну и молчи дальше'},\r\n    ],\r\n    newMessageText: '',\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_NEW_MESSAGE:\r\n            if (!action.newMessageText) return state;\r\n            let body = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body} ],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendNewMessageActionCreator = (newMessageText) => ({type: SEND_NEW_MESSAGE, newMessageText });\r\n\r\nexport default dialogsReducer;","import {usersAPI} from \"../../api/api\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'users/TOGGLE_IS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE : {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT : {\r\n            return {...state, totalUsersCount: action.count};\r\n        }\r\n        case TOGGLE_IS_FETCHING : {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING : {\r\n            return {\r\n                ...state, isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowing = (isFollowing, userId) => ({type: TOGGLE_IS_FOLLOWING, isFollowing, userId});\r\n\r\n// ThunkCreators\r\nexport const requestUsers = (requestedPage, pageSize) => async dispatch => {\r\n    dispatch(setCurrentPage(requestedPage));\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    const data = await usersAPI.getUsers(requestedPage, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowing(true, userId));\r\n\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async dispatch => {\r\n    let apiMethod = usersAPI.followUser.bind(usersAPI);\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n};\r\nexport const unfollow = (userId) => async dispatch => {\r\n    let apiMethod = usersAPI.unfollowUser.bind(usersAPI);\r\n    followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;\r\n","import {newsAPI} from \"../../api/api\";\r\n\r\nconst SET_ARTICLES = \"news/SET_ARTICLES\";\r\n\r\nconst initialState = {\r\n    articles: []\r\n};\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ARTICLES:\r\n            return {...state, articles: action.articles};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreators\r\nexport const setArticles = (articles) => ({type: SET_ARTICLES, articles});\r\n\r\n//ThunkCreators\r\nexport const requestArticles = () => async dispatch => {\r\n    try {\r\n        const data = await newsAPI.getNews();\r\n        if (data.status === \"ok\") {\r\n            dispatch(setArticles(data.articles))\r\n        }\r\n    }\r\n    catch (error) {\r\n        alert(\"API новостей решил прилечь\")\r\n    }\r\n};\r\n\r\nexport default newsReducer;","module.exports = __webpack_public_path__ + \"static/media/header-logo.4527c867.svg\";","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            {children}\r\n            {hasError && <i className={styles.error_icon + \" fas fa-exclamation-circle\"}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl_dContents + \" \" + (hasError ? styles.error : \"\")}>\r\n            <textarea {...input} {...props} />\r\n            {hasError && <span className={styles.error_message}>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <input {...input} {...props} className={styles.Input}/>\r\n            {hasError && <i className={styles.error_icon + \" fas fa-exclamation-circle\"}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RememberMe = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.checkboxBlock + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div className={styles.checkboxBlock__left}>\r\n                <label className={styles.checkboxBlock__label}>\r\n                    <input type=\"checkbox\" {...input} {...props} className={styles.checkbox}/>\r\n                    запомнить меня</label>\r\n            </div>\r\n            <div className={styles.checkboxBlock__right}>\r\n                <button className={styles.submitButton}>Войти</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Checkbox = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.checkboxBlock + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div className={styles.checkboxBlock__left}>\r\n                    <input type=\"checkbox\" {...input} {...props} className={styles.checkbox}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContent\":\"Login_loginContent__2w7O5\",\"login__header\":\"Login_login__header__30HIh\",\"loginForm__block\":\"Login_loginForm__block__1ms65\",\"formErorr\":\"Login_formErorr__12U9m\",\"captchaImage\":\"Login_captchaImage__7q4kS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1_Bw2\",\"post__header\":\"Post_post__header__3WixS\",\"post__date\":\"Post_post__date__1R9Ui\",\"post__content\":\"Post_post__content__Kgp3a\",\"post__activity\":\"Post_post__activity__3h7DM\",\"activities\":\"Post_activities__rWT-u\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <nav className={s.nav}>\r\n                <div className=\"container\">\r\n                    <div className=\"nav__column\">\r\n                        <div className=\"nav__list\">\r\n                            <div className={s.nav__link}>\r\n                                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Профиль</NavLink>\r\n                            </div>\r\n                            <div className={s.nav__link}>\r\n                                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Сообщения</NavLink>\r\n                            </div>\r\n                            <div className={s.nav__link}>\r\n                                <NavLink to=\"/users\" activeClassName={s.activeLink}>Пользователи</NavLink>\r\n                            </div>\r\n                            <div className={s.nav__link}>\r\n                                <NavLink to=\"/music\" activeClassName={s.activeLink}>Музыка</NavLink>\r\n                            </div>\r\n                            <div className={s.nav__link}>\r\n                                <NavLink to=\"/news\" activeClassName={s.activeLink}>Новости</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <AdaptiveNavbar/>\r\n        </>\r\n    );\r\n};\r\n\r\nconst AdaptiveNavbar = (props) => {\r\n    return (\r\n        <div className={s.adaptive__container}>\r\n            <div className={s.adaptive__block}>\r\n                <NavLink to=\"/profile\" activeClassName={s.adaptive_activeLink}>\r\n                    <i className=\"fas fa-house-user\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.adaptive__block}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.adaptive_activeLink}>\r\n                    <i className=\"fas fa-comments\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.adaptive__block}>\r\n                <NavLink to=\"/users\" activeClassName={s.adaptive_activeLink}>\r\n                    <i className=\"fas fa-users\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.adaptive__block}>\r\n                <NavLink to=\"/music\" activeClassName={s.adaptive_activeLink}>\r\n                    <i className=\"fas fa-music\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.adaptive__block}>\r\n                <NavLink to=\"/news\" activeClassName={s.adaptive_activeLink}>\r\n                    <i className=\"fas fa-newspaper\"/>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    let [ editMode, setEditMode ] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if(props.isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    };\r\n    const deactivateEditMode = () => {\r\n        if(props.isOwner) {\r\n            setEditMode(false);\r\n            props.updateUserStatus(status);\r\n        }\r\n    };\r\n    const enterDeactivateEditMode = (event) => {\r\n        if(props.isOwner) {\r\n            if (event.key === \"Enter\") {\r\n                setEditMode(false);\r\n                props.updateUserStatus(status);\r\n            }\r\n        }\r\n    };\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value)\r\n    };\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            <div>\r\n                {editMode\r\n                    ? <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                             onKeyPress={enterDeactivateEditMode}\r\n                             type=\"text\" value={status}/>\r\n                    : <p onDoubleClick={activateEditMode}\r\n                         className={s.status}>{props.status ||\r\n                    <span className={s.no_current_status}>{props.isOwner ? \"изменить статус\" : \"нет статуса\"}</span>}</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Checkbox, Input} from \"../../common/FormControls/FormControls\";\r\nimport styles from \"../../Login/Login.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    const [showMore, setShowMore] = useState(false);\r\n    return (\r\n        <form className={s.otherInformation} onSubmit={handleSubmit} >\r\n            <fieldset>\r\n                {error && <div className={styles.formErorr}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <p className={s.label}>Имя:</p><Field placeholder=\"новое имя\" name=\"fullName\" component={Input}\r\n                                                          type=\"text\"/>\r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                    <p className={s.label}>Обо мне:</p><Field placeholder=\"расскажите о себе\" name=\"aboutMe\"\r\n                                                              component={Input} type=\"text\"/>\r\n                </div>\r\n                <div className={s.job}>\r\n                    <label style={{display: \"flex\", alignItems: \"center\"}}>\r\n                        <p style={{fontSize: \"12px\"} }>Ищу работу</p>\r\n                        <Field name=\"lookingForAJob\" component={Checkbox} style={{position: \"relative\", top: \"2px\"}}/>\r\n                    </label>\r\n                    <p className={s.label}>Профессиональные навыки:</p><Field placeholder=\"ваши профессиональные навыки\"\r\n                                                                              name=\"lookingForAJobDescription\"\r\n                                                                              component={Input} type=\"text\"/>\r\n                </div>\r\n                {showMore\r\n                    ? <div className={s.showMore__block} onClick={()=>setShowMore(false)}><p>Скрыть полную информацию</p></div>\r\n                    : <div className={s.showMore__block} onClick={()=>setShowMore(true)}><p>Показать полную информацию</p></div>}\r\n            </fieldset>\r\n            {showMore && <fieldset>\r\n                <div>Мои контакты: </div>\r\n                <div className={s.editContacts}>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.label}>{key} : <Field placeholder={key} name={\"contacts.\" + key}\r\n                                                                 component={Input} type=\"text\"/></div>\r\n                })}\r\n\r\n                </div>\r\n            </fieldset>}\r\n            <div className={s.saveButton}>\r\n                <button className={s.btn_save}>Сохранить</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: \"editProfile\"})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm","import React from 'react';\r\nimport galleryStyle from './Gallery.module.css';\r\n\r\nexport const Gallery = (props) => {\r\n    return (<div className={galleryStyle.wrapper}>\r\n        <div className={galleryStyle.contentWrapper}>\r\n            <div className={galleryStyle.content}>\r\n                <div className={galleryStyle.header} >\r\n                    <p onClick={() => props.setShowGallery(false)}><i className=\"fas fa-window-close\"/> Закрыть</p>\r\n\r\n                    {props.isOwner && <div>\r\n                        <label  htmlFor=\"avatar\" className={galleryStyle.header}>\r\n                            <p>Обновить</p><i className=\"fas fa-cloud-upload-alt\"/>\r\n                            <input type=\"file\" id=\"avatar\" onInput={props.uploadPhoto} style={{display: \"none\"}}/>\r\n                        </label>\r\n                    </div>}\r\n                </div>\r\n                <img src={props.img} alt=\"gallery\"/>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n};\r\n","import React, {useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.svg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatus/ProfileStatusHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {Gallery} from \"../../common/Gallery/Gallery\";\r\n\r\nconst ProfileInfo = ({profile, isFetching, status, updateUserStatus, isOwner, updatePhoto, isAvatarUpdating, updateProfile}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [showGallery, setShowGallery] = useState(false);\r\n\r\n    const onSubmit = (formData) => {\r\n        updateProfile(formData).then( ()=>{\r\n            setEditMode(false);\r\n        })\r\n    };\r\n\r\n    const onAvatarSelected = (event) => {\r\n        if (event.target.files.length) {\r\n            updatePhoto(event.target.files[0]);\r\n        }\r\n    };\r\n    const gallery = () => {\r\n      if(profile.photos.large || profile.photos.small) setShowGallery(true);\r\n    };\r\n\r\n    if (isFetching || !profile) {\r\n        return <Preloader/>\r\n    } else return (\r\n        <>\r\n            <div className={s.profileBlock}>\r\n                <div className={s.avatarBlock}>\r\n                    <img src={profile.photos.large || userPhoto}\r\n                         alt=\"фото пользователя\" className={s.avatar_img}\r\n                    onClick={gallery} />\r\n                    <div style={isAvatarUpdating ? {display: \"flex\"} : {display: \"none\"}}\r\n                         className={s.loaging_fogging}>Загрузка...\r\n                    </div>\r\n\r\n                    {isOwner && <label htmlFor=\"avatar\" className={s.changeAvatar__container}>\r\n                        <div>\r\n                            <i className=\"fas fa-cloud-upload-alt\"/>\r\n                            <input onInput={onAvatarSelected} type=\"file\" id=\"avatar\" style={{display: \"none\"}}/>\r\n                        </div>\r\n                    </label>}\r\n                </div>\r\n\r\n                <div className={s.informationBlock}>\r\n                    <div className={s.nameBlock}>{profile.fullName}</div>\r\n                    <ProfileStatusHooks isOwner={isOwner} status={status} updateUserStatus={updateUserStatus}/>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile}\r\n                                           profile={profile}\r\n                                           deActivateEditMode={() => setEditMode(false)}\r\n                                           onSubmit={onSubmit}/>\r\n                        : <ProfileData profile={profile} isOwner={isOwner} activateEditMode={() => setEditMode(true)}/>}\r\n                </div>\r\n\r\n                {showGallery && <Gallery setShowGallery={setShowGallery} isOwner={isOwner} img={profile.photos.large || profile.photos.small}/>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n    let hasContact = false;\r\n    for (let key in profile.contacts) {\r\n        if (profile.contacts[key] !== null && profile.contacts[key] !== \"\") {\r\n            hasContact = true;\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.otherInformation}>\r\n            {profile.aboutMe && <div className={s.aboutMe}>\r\n                <i className=\"fas fa-address-card\"/> {profile.aboutMe}\r\n            </div>}\r\n            {(profile.lookingForAJob || profile.lookingForAJobDescription) && <div className={s.job}>\r\n                <i className=\"fas fa-briefcase\"/> Ищу работу {`( ${profile.lookingForAJobDescription} )`}\r\n            </div>}\r\n\r\n            {hasContact && <div className={s.contancts}>\r\n                Мои контакты:\r\n                <div className={s.contacts__row}>\r\n                    {Object.keys(profile.contacts).map((key, index) => {\r\n                        //отображаем контакт только если он задан\r\n                        return profile.contacts[key] &&\r\n                            <Contact key={index} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n            </div>}\r\n            {isOwner && <div className={s.showMore__block} onClick={activateEditMode}>\r\n                <p>Редактировать</p>\r\n            </div>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    let nameClass = null;\r\n    switch (contactTitle) {\r\n        case \"facebook\":\r\n            nameClass = \"fab fa-facebook-f\";\r\n            break;\r\n        case \"instagram\":\r\n            nameClass = \"fab fa-instagram\";\r\n            break;\r\n        case \"twitter\":\r\n            nameClass = \"fab fa-twitter\";\r\n            break;\r\n        case \"vk\":\r\n            nameClass = \"fab fa-vk\";\r\n            break;\r\n        case \"github\":\r\n            nameClass = \"fab fa-github\";\r\n            break;\r\n        case \"youtube\":\r\n            nameClass = \"fab fa-youtube\";\r\n            break;\r\n        case \"website\":\r\n            nameClass = \"fas fa-globe\";\r\n            break;\r\n        case \"mainLink\":\r\n            nameClass = \"fas fa-external-link-alt\";\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n    return (\r\n        <div className={s.icon__block}>\r\n            <a target=\"_blank\" href={contactValue}><i className={s.icon + \" \" + nameClass} rel=\"noopener\"/></a>\r\n        </div>\r\n    );\r\n};\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n","import {authAPI, securityAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state, ...action.payload};\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ActionCreators\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\n\r\n// ThunkCreators\r\nexport const getAuthUserData = () => async dispatch => {\r\n    const data = await authAPI.getAuth();\r\n\r\n    if (data.resultCode === 0) {\r\n        const {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe, captcha) => async dispatch => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n        //dispatch(getCaptchaUrlSuccess(null))\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = `(${data.messages[0]})`;\r\n        dispatch(stopSubmit(\"login\", {_error: `Не удалось войти в систему ${message}`}))\r\n    }\r\n};\r\nexport const logout = () => async dispatch => {\r\n    const data = await authAPI.logout();\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async dispatch => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport default authReducer;","import {profileAPI} from \"../../api/api\";\r\nimport {getAuthUserData} from \"../authorization/auth-reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst PROFILE_IS_FETCHING = 'profile/PROFILE_IS_FETCHING';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nconst UPDATE_PHOTO_SUCCESS = 'profile/UPDATE_PHOTO_SUCCESS';\r\nconst AVATAR_IS_UPDATING = 'profile/AVATAR_IS_UPDATING';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, Whoosh!', likesCount: 100},\r\n        {id: 2, message: 'Это твой первый пост', likesCount: 1},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    isFetching: false,\r\n    status: \"\",\r\n    isAvatarUpdating: false,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            if (!action.newPostText) return state;\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case PROFILE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)}\r\n        }\r\n        case UPDATE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        case AVATAR_IS_UPDATING: {\r\n            return {...state, isAvatarUpdating: action.isAvatarUpdating}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// ActionCreators\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const profileIsFetching = (isFetching) => ({type: PROFILE_IS_FETCHING, isFetching});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const updatePhotoSuccess = (photos) => ({type: UPDATE_PHOTO_SUCCESS, photos});\r\nexport const avatarIsUpdating = (isAvatarUpdating) => ({type: AVATAR_IS_UPDATING, isAvatarUpdating});\r\n\r\n// ThunkCreators\r\nexport const getUserProfile = (userId) => async dispatch => {\r\n    dispatch(profileIsFetching(true));\r\n\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(profileIsFetching(false));\r\n    dispatch(setUserProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async dispatch => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n};\r\nexport const updateUserStatus = (status) => async dispatch => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const updatePhoto = (photo) => async dispatch => {\r\n    dispatch(avatarIsUpdating(true));\r\n    const data = await profileAPI.updatePhoto(photo);\r\n    if (data.resultCode === 0) {\r\n        dispatch(updatePhotoSuccess(data.data.photos));\r\n        dispatch(avatarIsUpdating(false));\r\n    }\r\n};\r\nexport const updateProfile = (profile) => async (dispatch, getState) => {\r\n    const OwnerUserId = getState().auth.userId;\r\n\r\n    const data = await profileAPI.updateProfile(profile);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserProfile(OwnerUserId));\r\n    } else {\r\n        let message = `(${data.messages[0]})`;\r\n        dispatch(stopSubmit(\"editProfile\", {_error: `Ошибка: ${message}`}));\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.svg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post__header}>\r\n                <img src={props.profile.photos.small === null ? userPhoto : props.profile.photos.small} alt=\"avatar\"/>\r\n                <div>\r\n                    <h2>{props.profile.fullName}</h2>\r\n                    <div className={s.post__date}>15:30:12</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.post__content}>\r\n                <span>{props.message}</span>\r\n            </div>\r\n            <div className={s.post__activity}>\r\n                <div className={s.activities}>\r\n                    <i className=\"far fa-heart\"/> {props.likesCount}\r\n                </div>\r\n                &nbsp;\r\n                <div className={s.activities}>\r\n                    <i className=\"far fa-comment\"/> 0\r\n                </div>\r\n                &nbsp;\r\n                <div className={s.activities}>\r\n                    <i className=\"fas fa-share\"/> 0\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm } from \"redux-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map ( post => (<Post key={post.id} message={post.message} likesCount={post.likesCount}\r\n                                                     profile={props.profile}/>) );\r\n\r\n    const addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>Все записи</h2>\r\n            <AddNewPostReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postElements}\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={s.postsBlock__row}>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder=\"Что у вас нового?\" validate={[maxLength100]}/>\r\n            <button className={s.postsBlock__addButton}>Добавить</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({form:\"addNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n            dispatch(reset(\"addNewPostForm\"));\r\n        },\r\n    }\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if(props.isFetching || props.profile === null) {\r\n        return(<Preloader/>)\r\n    }\r\n    document.title = `Профиль | ${props.profile.fullName}`;\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container\">\r\n                <ProfileInfo isOwner={props.isOwner} profile={props.profile} isFetching={props.isFetching} status={props.status}\r\n                             updateUserStatus={props.updateUserStatus } updatePhoto={props.updatePhoto}\r\n                             isAvatarUpdating={props.isAvatarUpdating} updateProfile={props.updateProfile} />\r\n                {props.profile.userId === props.myUserId && <MyPostsContainer />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updatePhoto, updateProfile,\r\n    updateUserStatus\r\n} from \"../../Redux/profile/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.myUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n        document.title = \"Профиль\";\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     isFetching={this.props.isFetching}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     isAvatarUpdating={this.props.isAvatarUpdating}\r\n                     updateProfile={this.props.updateProfile}/>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    status: state.profilePage.status,\r\n    myUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isAvatarUpdating: state.profilePage.isAvatarUpdating\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, updatePhoto, updateProfile}),\r\n    withRouter,\r\n    // withAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from \"../../assets/images/header-logo.svg\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header__container}>\r\n                <div className={s.header__row}>\r\n                    <div className={s.header__logo}>\r\n                        <img src={logo} alt=\"самолётик\"/>\r\n                        <span className={s.logo_name}>Whoosh</span>\r\n                    </div>\r\n                    <NavLink to={`/profile`}>\r\n                        <div className={s.header__nameBlock}>\r\n                            {props.isAuth ? <div className={s.header__afterAuthBlock}>{props.login}</div> : null}\r\n                        </div>\r\n                    </NavLink>\r\n                    <NavLink to=\"/login\">\r\n                        <div className={s.header__loginBlock}>\r\n                            {props.isAuth ? <div onClick={props.logout}>Выйти</div> : <div>Войти</div>}\r\n                        </div>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../Redux/authorization/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React, {useEffect} from \"react\";\r\nimport \"../../App.css\"\r\nimport styles from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {RememberMe, Input} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCaptchaUrl, login} from \"../../Redux/authorization/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={styles.loginForm__block}>\r\n                <label>Введите email\r\n                    <Field placeholder=\"example@gmail.com\" name=\"email\" component={Input} validate={[required, maxLength30]} type=\"email\"/>\r\n                </label>\r\n            </div>\r\n            <div className={styles.loginForm__block}>\r\n                <label>Введите пароль\r\n                    <Field placeholder=\"Пароль\" name=\"password\" component={Input} validate={[required, maxLength30]} type=\"password\" />\r\n                </label>\r\n            </div>\r\n\r\n            {error && <div className={styles.formErorr}>\r\n                {error}\r\n            </div>}\r\n\r\n            {captchaUrl && <div className={styles.loginForm__block}><img className={styles.captchaImage} src={captchaUrl} alt=\"captcha\"/></div>}\r\n            {captchaUrl &&\r\n            <div className={styles.loginForm__block}>\r\n                <label>Введите символы с картинки\r\n                    <Field placeholder=\"Символы\" name=\"captcha\" component={Input} validate={[required, maxLength10]} />\r\n                </label>\r\n            </div>}\r\n\r\n            <div className={styles.loginForm__block} >\r\n                <Field component={RememberMe} name=\"rememberMe\" type=\"checkbox\" />\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    useEffect(() => {document.title = \"Войти | Whoosh\"},[]);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div className={styles.loginContent + \" content\"}>\r\n            <div className=\"container\">\r\n                <div className={styles.login__header}>Войдите в свой аккаунт</div>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n};\r\nexport default connect(mapStateToProps, {login, getCaptchaUrl})(Login);","import {getAuthUserData} from \"./authorization/auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized: true};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ActionCreators\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n// ThunkCreators\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n};\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReducer from \"./profile/profile-reducer.js\";\r\nimport dialogsReducer from \"./dialogs/dialogs-reducer\";\r\nimport usersReducer from \"./users/users-reducer\";\r\nimport authReducer from \"./authorization/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\nimport newsReducer from \"./news/news-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    news: newsReducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst InitialiePreloader = () => {\r\n    return (\r\n        <img src={preloader} style={ {position: \"relative\", display: \"block\", margin: \"0 auto\" }}/>\r\n    );\r\n};\r\nexport default InitialiePreloader;","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\nimport InitialiePreloader from \"./components/common/Preloader/InitializePreloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst NewsContainer = React.lazy(() => import('./components/News/NewsContainer'));\nconst NotFound = React.lazy(() => import('./components/common/NotFound/NotFound'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <InitialiePreloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <Suspense fallback={<Preloader/>}>\n                    <Switch>\n                        <Redirect exact from=\"/\" to=\"/profile\"/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/news' render={() => <NewsContainer/>}/>\n                        <Route path='/music' component={NotFound}/>\n                        <Route path='/login' render={() => <LoginPage/>}/>\n                        <Route render={() => <NotFound/>}/>\n                    </Switch>\n                </Suspense>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst WhooshApp = (props) => {\n    return <HashRouter basename=\"/\">\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default WhooshApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WhooshApp from \"./App\";\n\nReactDOM.render(<WhooshApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__31Spg\",\"header__container\":\"Header_header__container__1X4Xa\",\"header__row\":\"Header_header__row__Sb-1l\",\"header__logo\":\"Header_header__logo__1tg88\",\"logo_name\":\"Header_logo_name__2pKRy\",\"header__loginBlock\":\"Header_header__loginBlock__Bg-F8\",\"header__nameBlock\":\"Header_header__nameBlock__1fuQz\",\"header__afterAuthBlock\":\"Header_header__afterAuthBlock__FAqkY\"};","export const required = value => {\r\n    if(value) return undefined\r\n    return \"Поле обязательное\"\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) =>\r\n    (value) => value && value.length > maxLength ? `Максимальная длина ${maxLength} символов` : undefined;\r\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img src={preloader} style={ {position: \"absolute\", left: \"50%\", top: \"100px\" }}/>\r\n    );\r\n};\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Gallery_wrapper__2tUtK\",\"contentWrapper\":\"Gallery_contentWrapper___O0SK\",\"content\":\"Gallery_content__2EyXc\",\"header\":\"Gallery_header__3W1x6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1o35Z\",\"postsBlock__row\":\"MyPosts_postsBlock__row__29Zwj\",\"postsBlock__addButton\":\"MyPosts_postsBlock__addButton__1QjAP\",\"posts\":\"MyPosts_posts__3k9O3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__image\":\"ProfileInfo_content__image__2itkw\",\"profileBlock\":\"ProfileInfo_profileBlock__1Tl-n\",\"avatarBlock\":\"ProfileInfo_avatarBlock__1yytu\",\"changeAvatar__container\":\"ProfileInfo_changeAvatar__container__1gz-k\",\"avatar_img\":\"ProfileInfo_avatar_img__26JxK\",\"informationBlock\":\"ProfileInfo_informationBlock__RozSX\",\"nameBlock\":\"ProfileInfo_nameBlock__2E1u-\",\"loaging_fogging\":\"ProfileInfo_loaging_fogging__YhFiT\",\"otherInformation\":\"ProfileInfo_otherInformation__3ownT\",\"aboutMe\":\"ProfileInfo_aboutMe__298K3\",\"job\":\"ProfileInfo_job__34hgw\",\"contacts\":\"ProfileInfo_contacts__h6eAy\",\"contancts\":\"ProfileInfo_contancts__1ENsG\",\"contacts__row\":\"ProfileInfo_contacts__row__3gkjF\",\"label\":\"ProfileInfo_label__3EksU\",\"showMore__block\":\"ProfileInfo_showMore__block__1jTs7\",\"editContacts\":\"ProfileInfo_editContacts__2Nr6U\",\"saveButton\":\"ProfileInfo_saveButton__wVTpW\",\"btn_save\":\"ProfileInfo_btn_save__31jnB\",\"icon__block\":\"ProfileInfo_icon__block__2ZbFb\",\"icon\":\"ProfileInfo_icon__2ujAo\"};","module.exports = __webpack_public_path__ + \"static/media/user.d3569aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.e5007e6d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__20BWJ\",\"status\":\"ProfileStatus_status__3KL3I\",\"no_current_status\":\"ProfileStatus_no_current_status__86MZC\"};"],"sourceRoot":""}